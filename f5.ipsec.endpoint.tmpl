#TMSH-VERSION: 12.1.2

cli admin-partitions {
    update-partition Common
}
sys application template /Common/f5.ipsec.endpoint{
    actions {
        definition {
            html-help {
                <p><b>IPsec Tunnel iApp Template</b></p>

<p>For improved readability, click the <b>Launch</b> button to view the Help guidelines in a resizable window.</p>

<p>While this template creates a complete configuration for establishing an IPSec tunnel, (either policy-based or route-based) between Windows Azure and your F5 protected network; it may also be used for establishing generic IPsec tunnels between compatible devices.<br><br> Before you start: </p>
<ul>
    <li>Check System :: Resource Provisioning to ensure that Local Traffic Manager (LTM) is provisioned.</li>
    <li>Have available a publicly routable local endpoint IP address.</li>
    <li>Have available the remote endpoint and preshared key, (supplied by Windows Azure).</li>
</ul>
<b>NOTE:</b><i>To successfuly establish a connection with Windows Azure, the local endpoint must be a publicly routable IP address that is not located behind a NAT device.</i>
<br><br>
<p><b>Tunnel Endpoint Configuration</b></p>
<p>
    Provide the local endpoint address/mask, the next upstream gateway address, (hop), the remote endpoint address, and preshared key.<br>
    In addition to creating the IPSec tunnel objects, the information provided will be used to create a dedicated Self-IP corresponding to the local endpoint as well as static route(s) between the protected network(s).
</p>



<p><b>Protected Subnets</b></p>

<p>Provide traffic information that will should be passed through, (protected by) the IPsec tunnel.  The traffic patterns are identified by providing one or more local "Source" address/network and a Remote "Destination" address/network pairings.</p>


<p>Review your answers to the questions. Click Cancel to abandon all settings and return to the Application Services List screen. Click Finished, and the iApp creates the application objects. After the application generates, you can view its components by clicking the application's name in the Application Services List screen, and then clicking the Components tab. You can modify the application by selecting the application's name in the Application Services list and clicking the Reconfigure tab.</p>
            }
            implementation {
                tmsh::log_dest file
tmsh::log_level crit

tmsh::include "f5.app_utils"

# constants
set NO_ANSWER "No"
set YES_ANSWER "Yes"
set TUNNEL_PB "Policy-Based"
set TUNNEL_RB "Route-Based"
set DFG "0.0.0.0"

proc tmsh_create { component arguments } {
    regsub -all {\"} $arguments "\\\"" arguments
        regsub -all {\[} $arguments "\\\[" arguments
        regsub -all {\]} $arguments "\\\]" arguments
        regsub -all {\$} $arguments "\\\$" arguments
        tmsh::run_proc f5.app_utils:do_tmsh_create "\"$component\"" "\"$arguments\""
    }

    proc tunnel_create {} {
        set counter 0
        set local_vlan $::basic__vlan_selection
        set local_TG $::basic__TG_selection
        set remote_addr $::protsubs__remoteendpt
        set pre_key $::protsubs__presharekey
        set localendpt $::basic__local__localendpt
        set localendptmask $::basic__local__localendptmask
        set mylength [string first "/" $localendpt]
        set self_name [format "%s_%s" $tmsh::app_name "IPSec_Self"]
        set tunnelself_name [format "%s_%s" $tmsh::app_name "Tunnel_Self"]
        set peer_name [format "%s_%s" $tmsh::app_name "IPSec_Peer"]
        set policy_name [format "%s_%s" $tmsh::app_name "IPSec_Policy"]
        set traffic_name [format "%s_%s" $tmsh::app_name "Traffic"]
        set tunnel_name [format "%s_%s" $tmsh::app_name "Tunnel"]
        set tunnelpol_name [format "%s_%s" $tmsh::app_name "Tunnel_Policy"]
        set AzureDeploy $::basic__AzureDeploy
        set forwardYN $::basic__forwardvs
        set tunneltype $::initial__tunneltype
        set p1auth $::protsubs__p1__auth
        set p1encrypt $::protsubs__p1__encrypt
        set p2auth $::protsubs__p2__auth
        set p2encrypt $::protsubs__p2__encrypt

        if { $forwardYN == $::YES_ANSWER } {
            tmsh_create "ltm virtual" "Forwarding_vs destination \/Common\/0.0.0.0:0 ip-forward mask any profiles replace-all-with \{\/Common\/fastL4 \{ \}\} translate-address disabled translate-port disabled vlans-disabled"
            tmsh_create "ltm virtual-address" "0.0.0.0 address any arp disabled mask any"
        }

        if { $AzureDeploy == $::NO_ANSWER } {
            tmsh_create "net self" "$self_name vlan $local_vlan traffic-group $local_TG address $localendpt\/$localendptmask allow-service none"
        }

    if { $tunneltype == $::TUNNEL_PB } {
        tmsh_create "net ipsec ike-peer" "$peer_name lifetime 480 phase1-encrypt-algorithm aes128 phase1-hash-algorithm sha1 phase1-auth-method pre-shared-key preshared-key $pre_key remote-address $remote_addr verify-cert true Nat-traversal on version replace-all-with \{ v1 \}"
        tmsh_create "net ipsec ipsec-policy" "$policy_name ike-phase2-auth-algorithm sha1 ike-phase2-encrypt-algorithm aes128 ike-phase2-lifetime 60 mode tunnel tunnel-local-address $localendpt tunnel-remote-address $remote_addr"
        foreach member $::protsubs__subs {
            set counter [expr {$counter + 1}]
            set destaddr [tmsh::get_field_value $member destaddr]
            set destmask [tmsh::get_field_value $member destmask]
            set srcaddr [tmsh::get_field_value $member srcaddr]
            set srcmask [tmsh::get_field_value $member srcmask]
            set nexthop $::basic__nexthop  	
            tmsh_create "net ipsec traffic-selector" "$traffic_name$counter destination-address $destaddr\/$destmask ipsec-policy $policy_name source-address $srcaddr\/$srcmask order $counter"
            tmsh_create "net route" "$destaddr\/$destmask gw $nexthop"
    }
}

if { $tunneltype == $::TUNNEL_RB } {
    set tunneladdr $::protsubs__tsub__tunnelendpt
    set tunnelmask $::protsubs__tsub__tunnelmask
    tmsh_create "net ipsec traffic-selector" "$traffic_name destination-address 0.0.0.0\/0.0.0.0 ipsec-policy $policy_name source-address 0.0.0.0\/0.0.0.0 order $counter"
    tmsh_create "net ipsec ipsec-policy" "$policy_name ike-phase2-auth-algorithm $p2auth ike-phase2-encrypt-algorithm $p2encrypt mode interface"
    tmsh_create "net ipsec ike-peer" "$peer_name my-id-type address my-id-value $localendpt peers-id-type address peers-id-value $remote_addr phase1-encrypt-algorithm $p1encrypt phase1-hash-algorithm $p1auth phase1-auth-method pre-shared-key preshared-key $pre_key remote-address $remote_addr traffic-selector replace-all-with \{ $traffic_name \} Nat-traversal off version replace-all-with \{ v2 \}"
    tmsh_create "net tunnels ipsec" "$tunnelpol_name traffic-selector $traffic_name"
    tmsh_create "net tunnels tunnel" "$tunnel_name local-address $localendpt profile $tunnelpol_name remote-address $remote_addr"
    tmsh_create "net self" "$tunnelself_name vlan $tunnel_name traffic-group $local_TG address $tunneladdr\/$tunnelmask allow-service none"
    foreach member $::protsubs__rsubs {
        set counter [expr {$counter + 1}]
    set rdestaddr [tmsh::get_field_value $member rdestaddr]
    set rdestmask [tmsh::get_field_value $member rdestmask]
        tmsh_create "net route" "$rdestaddr\/$rdestmask interface $tunnel_name"
}
}
}



tunnel_create
            }
            macro {
            }
            presentation {
                include "/Common/f5.apl_common"

section intro {

    message hello "Use this template to configure BIG-IP to act as an IPSec tunnel endpoint for establishing site-to-site VPN connections."
    message check_for_updates "Ensure you are using the most recent template before continuing. This template was originally released on 07-25-2016. Check for newer versions on DevCentral: https://devcentral.f5.com/wiki/iApp.CodeShare.ashx"
    message Supported_software "This iApp supports configuring BIG-IP LTM 12.0.0 or later with Windows Azure.  Additionally, this template may be used to establish IPSec connectivity with any compatible IPSec device."
    message Prerequisites "Prior to implementing this application template, an appropriate networking configuration, (i.e. Internal facing Self-IPs, default gateways, etc.) should be configured to allow for successful data flow between internal network sites."


}

section initial {
    choice tunneltype default "Route-Based" {"Policy-Based", "Route-Based"} 
}

section basic {
    yesno AzureDeploy
    row local {
        string localendpt required validator "IpAddress"
        string localendptmask required validator "IpAddress"
    }
    optional (initial.tunneltype == "Policy-Based" ) {
        string nexthop required
    }
    choice vlan_selection tcl {
        tmsh::run_proc f5.app_utils:get_vlans
    }
    choice TG_selection tcl {
        tmsh::run_proc f5.app_utils:get_items /cm traffic-group
    }  
    yesno forwardvs
}

section protsubs {    
    string remoteendpt  required validator "IpAddress"
    string presharekey required

    row p1 {
        choice auth default "sha1" {"SHA-1" => "sha1", "SHA-256" => "sha256"}
        choice encrypt default "aes128" {"3DES" => "3des", "AES-128" => "aes128", "AES-256" => "aes256"}
    }
    row p2 {
        choice auth default "sha1" {"SHA-1" => "sha1" , "SHA-256" => "sha256"}
        choice encrypt default "aes128" {"3DES" => "3des", "AES-128" => "aes128", "AES-256" => "aes256"}
        }
    optional (initial.tunneltype == "Policy-Based" ) {
        table subs {
            string srcaddr validator "IpAddress"
            string srcmask validator "IpAddress"
            string destaddr validator "IpAddress"
            string destmask validator "IpAddress"
        }
        }
    optional (initial.tunneltype == "Route-Based" ) {
        row tsub {
            string tunnelendpt required validator "IpAddress"
            string tunnelmask required validator "IpAddress"
        }
        table rsubs {
            string rdestaddr validator "IpAddress"
            string rdestmask validator "IpAddress"
        }
        }
        }

text {
    intro "Welcome to the IPSec Endpoint template"
    intro.hello "Introduction"
    intro.check_for_updates "Check for updates"

    initial "Tunnel Type"
    initial.tunneltype "What type of IPsec tunnel will be created?  Policy-Based or Route-Based"

    basic "Tunnel Endpoint Configuration"
    basic.AzureDeploy "Is this BIG-IP deployed in Azure?"
    basic.vlan_selection "What VLAN will the local endpoint be assigned to?"
    basic.TG_selection "What traffic group will the local endpoint be assigned to?"
    basic.local "Local IPsec Endpoint"
    basic.local.localendpt "IP Address"
    basic.local.localendptmask "Mask"

    basic.nexthop "Next upstream hop, (Gateway) IP address?"
    basic.forwardvs "Do you need to add a forwarding virtual server to enable inter-network traffic flow?"

    protsubs "Tunnel Configuration"    
    protsubs.remoteendpt "Remote tunnel endpoint address?"
    protsubs.presharekey "Enter the pre-shared key."

    protsubs.p1 "Phase I Tunnel Security"
    protsubs.p1.auth "Authentication strength"
    protsubs.p1.encrypt "Encryption strength"

    protsubs.p2 "Phase II Tunnel Security"
    protsubs.p2.auth "Authentication strength"
    protsubs.p2.encrypt "Encryption strength"

    protsubs.subs "What traffic will be sent thru the tunnel?"
    protsubs.subs.srcaddr "Source Network"	
    protsubs.subs.srcmask "Source Network Mask"	
    protsubs.subs.destaddr "Destination Network"
    protsubs.subs.destmask "Destination Network Mask"

    protsubs.tsub "Internal Tunnel Addressing"
    protsubs.tsub.tunnelendpt "Internal Tunnel IP Address"
    protsubs.tsub.tunnelmask "Internal Tunnel Mask"

    protsubs.rsubs "Destination Network(s)"
    protsubs.rsubs.rdestaddr "Destination Network"
    protsubs.rsubs.rdestmask "Destination Network Mask"

        }
            }
            role-acl none
            run-as none
        }
    }
    description none
    ignore-verification false
    requires-bigip-version-max none
    requires-bigip-version-min 12.0
    requires-modules { ltm }
    signing-key none
    tmpl-checksum none
    tmpl-signature none
}
